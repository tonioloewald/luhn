{"mappings":"AAAO,MAAMA,EAAQC,IAGnB,MAAMC,EAASC,OAAOF,GAAIG,MAAM,QAAQC,KAAIC,GAAKC,OAAOD,KAAIE,UAC5D,OAAiB,MAAVN,GACHA,EACCG,KAAI,CAACC,EAAGG,KAEPH,EAAIG,EAAM,GAAM,EAAQ,EAAJH,EAAQA,GAEjB,EAAIA,EAAI,GAAK,EAAIA,IAE7BI,QAAO,CAACC,EAAGL,IAAMK,EAAIL,GAAG,GAAK,IAAO,CAChC,S","sources":["src/luhn.ts"],"sourcesContent":["export const luhn = (cc: string | number): boolean => {\n  // simple regex will pull all the numbers out\n  // reverse the digits to simplify positional operation \"counting from the backl\"\n  const digits = String(cc).match(/\\d/g)?.map(d => Number(d)).reverse()\n  return digits != null\n    ? digits\n      .map((d, idx) => {\n        // double even-numbered digits counting from the back\n        d = idx % 2 !== 0 ? d * 2 : d\n        // adding the digits if the result > 9 is just adding 1 to the modulus\n        return d > 9 ? d % 10 + 1 : d\n      })\n      .reduce((s, d) => s + d, 0) % 10 === 0\n    : false\n}\n"],"names":["$bba1e1451cb2e71b$export$abcf6ff89c3603f5","cc","digits","String","match","map","d","Number","reverse","idx","reduce","s"],"version":3,"file":"luhn.js.map"}