{"mappings":"AAAO,MAAM,4CAAO,CAAC,KAAiC;IACpD,6CAA6C;IAC7C,gFAAgF;IAChF,MAAM,SAAS,OAAO,IAAI,KAAK,CAAC,QAAQ,IAAI,CAAA,IAAK,OAAO,IAAI,OAAO;IACnE,OAAO,UAAU,IAAI,GACjB,OACC,GAAG,CAAC,CAAC,GAAG,MAAQ;QACf,qDAAqD;QACrD,IAAI,MAAM,MAAM,IAAI,IAAI,IAAI,CAAC;QAC7B,sEAAsE;QACtE,OAAO,IAAI,IAAI,IAAI,KAAK,IAAI,CAAC;IAC/B,GACC,MAAM,CAAC,CAAC,GAAG,IAAM,IAAI,GAAG,KAAK,OAAO,IACrC,KAAK;AACX","sources":["src/luhn.ts"],"sourcesContent":["export const luhn = (cc: string | number): boolean => {\n  // simple regex will pull all the numbers out\n  // reverse the digits to simplify positional operation \"counting from the backl\"\n  const digits = String(cc).match(/\\d/g)?.map(d => Number(d)).reverse()\n  return digits != null\n    ? digits\n      .map((d, idx) => {\n        // double even-numbered digits counting from the back\n        d = idx % 2 !== 0 ? d * 2 : d\n        // adding the digits if the result > 9 is just adding 1 to the modulus\n        return d > 9 ? d % 10 + 1 : d\n      })\n      .reduce((s, d) => s + d, 0) % 10 === 0\n    : false\n}\n"],"names":[],"version":3,"file":"module.js.map"}